name: Run Cadence tests
on: push

jobs:
  get-recipe-repos:
    runs-on: macos-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Dynamically retrieve matrix
        id: set-matrix      
        run: echo "::set-output name=matrix::$(ls -d src/data/recipes/* | jq -R -s -c 'split("\n")[:-1]' )"
  run-cadence-tests:
    needs: get-recipe-repos
    runs-on: macos-latest
    strategy:
        matrix:
            recipe: ${{ fromJson(needs.get-recipe-repos.outputs.matrix) }}
    steps:
       - name: Set env
         env:
            RECIPE_REPO: "${{ matrix.recipe }}"
         run: |
            RECIPE_REPO=${{ env.RECIPE_REPO }}
            RECIPE_REPO=${RECIPE_REPO//:} # replace all colons
            echo RECIPE_REPO=${RECIPE_REPO} >> $GITHUB_ENV # update GitHub ENV vars
       - name: Check out repository code
         uses: actions/checkout@v4
         with:
          submodules: 'true'
       - name: Install Flow CLI
         run: |
           brew update
           brew install flow-cli
       - name: Initialize Flow
         run: |
           cd ${{ env.RECIPE_REPO }}
           if [ ! -f flow.json ]; then
             echo "Initializing Flow project..."
             flow init
           else
             echo "Flow project already initialized."
           fi
           flow dependencies install
       - name: Start Flow Emulator
         run: |
           cd ${{ env.RECIPE_REPO }}
           echo "Starting Flow emulator in the background..."
           nohup flow emulator start > emulator.log 2>&1 &
           sleep 5 # Wait for the emulator to start
           flow project deploy --network=emulator # Deploy the recipe contracts indicated in flow.json                           


      - name: Run All Transactions
        run: |
          cd ${{ env.RECIPE_REPO }}
          echo "Running all transactions in the transactions folder..."
          for file in ./cadence/transactions/*.cdc; do
            echo "Running transaction: $file"
            TRANSACTION_OUTPUT=$(flow transactions send "$file" --signer emulator-account)
            echo "$TRANSACTION_OUTPUT"
            if echo "$TRANSACTION_OUTPUT" | grep -q "Transaction Error"; then
              echo "Transaction Error detected in $file, failing the action..."
              exit 1
            fi
          done

      - name: Run Cadence Lint
        run: |
          cd ${{ env.RECIPE_REPO }}
          echo "Running Cadence linter on .cdc files in the current repository"
          flow cadence lint ./cadence/**/*.cdc

      - name: Run Cadence Tests
      run: |
        cd ${{ env.RECIPE_REPO }}
        if test -f "cadence/tests.cdc"; then
          echo "Running Cadence tests in the current repository"
          flow test cadence/tests.cdc
        else
          echo "No Cadence tests found. Skipping tests."
        fi



   
