"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_parigp"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/parigp.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/parigp.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = parigp\nparigp.displayName = 'parigp'\nparigp.aliases = []\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function() {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function(keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\w[\\w ]*?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wYXJpZ3AuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGtKQUFrSixJQUFJO0FBQ3RKLHlCQUF5QixNQUFNO0FBQy9CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3BhcmlncC5qcz83ZGE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBhcmlncFxucGFyaWdwLmRpc3BsYXlOYW1lID0gJ3BhcmlncCdcbnBhcmlncC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHBhcmlncChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMucGFyaWdwID0ge1xuICAgIGNvbW1lbnQ6IC9cXC9cXCpbXFxzXFxTXSo/XFwqXFwvfFxcXFxcXFxcLiovLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86W15cIlxcXFxcXHJcXG5dfFxcXFwuKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIC8vIFBBUkkvR1AgZG9lcyBub3QgY2FyZSBhYm91dCB3aGl0ZSBzcGFjZXMgYXQgYWxsXG4gICAgLy8gc28gbGV0J3MgcHJvY2VzcyB0aGUga2V5d29yZHMgdG8gYnVpbGQgYW4gYXBwcm9wcmlhdGUgcmVnZXhwXG4gICAgLy8gKGUuZy4gXCJiICpyICplICphICprXCIsIGV0Yy4pXG4gICAga2V5d29yZDogKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGtleXdvcmRzID0gW1xuICAgICAgICAnYnJlYWtwb2ludCcsXG4gICAgICAgICdicmVhaycsXG4gICAgICAgICdkYmdfZG93bicsXG4gICAgICAgICdkYmdfZXJyJyxcbiAgICAgICAgJ2RiZ191cCcsXG4gICAgICAgICdkYmdfeCcsXG4gICAgICAgICdmb3Jjb21wb3NpdGUnLFxuICAgICAgICAnZm9yZGl2JyxcbiAgICAgICAgJ2ZvcmVsbCcsXG4gICAgICAgICdmb3JwYXJ0JyxcbiAgICAgICAgJ2ZvcnByaW1lJyxcbiAgICAgICAgJ2ZvcnN0ZXAnLFxuICAgICAgICAnZm9yc3ViZ3JvdXAnLFxuICAgICAgICAnZm9ydmVjJyxcbiAgICAgICAgJ2ZvcicsXG4gICAgICAgICdpZmVycicsXG4gICAgICAgICdpZicsXG4gICAgICAgICdsb2NhbCcsXG4gICAgICAgICdteScsXG4gICAgICAgICduZXh0JyxcbiAgICAgICAgJ3JldHVybicsXG4gICAgICAgICd1bnRpbCcsXG4gICAgICAgICd3aGlsZSdcbiAgICAgIF1cbiAgICAgIGtleXdvcmRzID0ga2V5d29yZHNcbiAgICAgICAgLm1hcChmdW5jdGlvbihrZXl3b3JkKSB7XG4gICAgICAgICAgcmV0dXJuIGtleXdvcmQuc3BsaXQoJycpLmpvaW4oJyAqJylcbiAgICAgICAgfSlcbiAgICAgICAgLmpvaW4oJ3wnKVxuICAgICAgcmV0dXJuIFJlZ0V4cCgnXFxcXGIoPzonICsga2V5d29yZHMgKyAnKVxcXFxiJylcbiAgICB9KSgpLFxuICAgIGZ1bmN0aW9uOiAvXFx3W1xcdyBdKj8oPz0gKlxcKCkvLFxuICAgIG51bWJlcjoge1xuICAgICAgLy8gVGhlIGxvb2tiZWhpbmQgYW5kIHRoZSBuZWdhdGl2ZSBsb29rYWhlYWQgcHJldmVudCBmcm9tIGJyZWFraW5nIHRoZSAuLiBvcGVyYXRvclxuICAgICAgcGF0dGVybjogLygoPzpcXC4gKlxcLiAqKT8pKD86XFxkKD86ICpcXGQpKig/OiAqKD8hXFwuICpcXC4pXFwuKD86ICpcXGQpKik/fFxcLiAqXFxkKD86ICpcXGQpKikoPzogKmUgKlsrLV0/ICpcXGQoPzogKlxcZCkqKT8vaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOiAvXFwuICpcXC58WypcXC8hXSg/OiAqPSk/fCUoPzogKj18KD86ICojKT8oPzogKicpKik/fFxcKyg/OiAqWys9XSk/fC0oPzogKlstPT5dKT98PCg/Oig/OiAqPCk/KD86ICo9KT98ICo+KT98Pig/OiAqPik/KD86ICo9KT98PSg/OiAqPSl7MCwyfXxcXFxcKD86ICpcXC8pPyg/OiAqPSk/fCYoPzogKiYpP3xcXHwgKlxcfHxbJyN+Xl0vLFxuICAgIHB1bmN0dWF0aW9uOiAvW1xcW1xcXXt9KCkuLDo7fF0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/parigp.js\n"));

/***/ })

}]);